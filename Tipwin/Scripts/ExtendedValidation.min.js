/**
* MVC Unobtrusive Extended Validation Plugin 0.1
* Copyright (c) 2014 Noor
* Licensed under MIT: http://www.opensource.org/licenses/mit-license.php
*/
function d() { this.b = function (a, b, c) { b = $("#" + (b.id.substr(0, b.id.lastIndexOf("_") + 1) + c.h.replace(/\./g, "_"))).k(); var f = c.f; c = c.g; if (!a && 0 !== a || !b && 0 !== b) return !0; "date" == c ? (a = Date.parse(a), b = Date.parse(b)) : "number" == c && (a = parseFloat(a), b = parseFloat(b)); c = !1; switch (f) { case "greaterthan": c = a > b; break; case "greaterthanorequalto": c = a >= b; break; case "lessthan": c = a < b; break; case "lessthanorequalto": c = a <= b; break; case "equalto": c = a == b; break; case "notequalto": c = a != b } return c } }
function e(a, b) { b.rules[a] = { h: b.i.h, f: b.i.f, g: b.i.g }; b.message && (b.j[a] = b.message) } jQuery.a.d("greaterthan", function (a, b, c) { return (new d).b(a, b, c) }); jQuery.a.e.c.add("greaterthan", ["otherproperty", "comparison", "datatype"], function (a) { e("greaterthan", a) }); jQuery.a.d("greaterthanorequalto", function (a, b, c) { return (new d).b(a, b, c) }); jQuery.a.e.c.add("greaterthanorequalto", ["otherproperty", "comparison", "datatype"], function (a) { e("greaterthanorequalto", a) });
jQuery.a.d("lessthan", function (a, b, c) { return (new d).b(a, b, c) }); jQuery.a.e.c.add("lessthan", ["otherproperty", "comparison", "datatype"], function (a) { e("lessthan", a) }); jQuery.a.d("lessthanorequalto", function (a, b, c) { return (new d).b(a, b, c) }); jQuery.a.e.c.add("lessthanorequalto", ["otherproperty", "comparison", "datatype"], function (a) { e("lessthanorequalto", a) }); jQuery.a.d("notequalto", function (a, b, c) { return (new d).b(a, b, c) });
jQuery.a.e.c.add("notequalto", ["otherproperty", "comparison", "datatype"], function (a) { e("notequalto", a) });

